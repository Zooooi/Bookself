<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:books="components.books.*"
		 currentState="intro"
		 preinitialize="SystemOS.mode = SystemOS.PC"
		 stateChangeComplete="group1_stateChangeCompleteHandler(event)"
		 addedToStage="onEvent(event)"
		 creationComplete="group1_creationCompleteHandler(event)"
		 >
	
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import JsC.events.JEvent;
			import JsC.mdel.SystemOS;
			
			import jsProject.mdel.Files;
			
			private var book:Book
			protected function onJEvent(event:JEvent):void
			{
				switch(event.type)
				{
					case JEvent.SELECT:
						currentState = "book"
						break;
						
					case JEvent.HOME:
						currentState = "intro"
						break;
				}
			}
			
			public function $setPath(_folder:String):void
			{
				Files.$asset = _folder
			}
			
			protected function group1_stateChangeCompleteHandler(event:FlexEvent):void
			{
				switch(currentState)
				{
					case "book":
						book = new Book
						book.percentWidth = 100
						book.percentHeight = 100
						book.addEventListener(JEvent.HOME,onJEvent)
						addElement(book)
						break;
						
					default:
						if (book) 
						{
							removeElement(book)
						}
						break;
				}
			}
			
			protected function onEvent(event:Event):void
			{
				switch(event.type)
				{
					case Event.ADDED_TO_STAGE:
						stage.addEventListener(Event.RESIZE,onEvent)
						break;
					case Event.RESIZE:
						width = stage.stageWidth
						height = stage.stageHeight
						
						//onResize()
						
						break
				}
			}
			
			private function onResize():void
			{
				var bScale:Boolean
				
				if (Math.max(stage.stageWidth, stage.stageHeight)>1024)
				{
					bScale  = true
					
				}else if (Math.min(stage.stageWidth, stage.stageHeight)>768){
					bScale  = true
				}
				if (bScale)
				{
					var guiSize:Rectangle = new Rectangle(0, 0, 1024, 768);
					var deviceSize:Rectangle = new Rectangle(0, 0,
						Math.max(stage.stageWidth, stage.stageHeight),
						Math.min(stage.stageWidth, stage.stageHeight));
					
					var appScale:Number = 1;
					var appSize:Rectangle = guiSize.clone();
					var appLeftOffset:Number = 0;
					
					
					// if device is wider than GUI's aspect ratio, height determines scale
					if ((deviceSize.width/deviceSize.height) > (guiSize.width/guiSize.height)) {
						appScale = deviceSize.height / guiSize.height;
						appSize.width = deviceSize.width / appScale;
						appLeftOffset = Math.round((appSize.width - guiSize.width) / 2);
						/* main.scaleX =appScale
						main.scaleY =appScale
						main.width = appSize.width   */
					} 
						// if device is taller than GUI's aspect ratio, width determines scale
					else {
						appScale = deviceSize.width / guiSize.width;
						appSize.height = deviceSize.height / appScale;
						appLeftOffset = 0;
						/* 	main.scaleX =appScale
						main.scaleY =appScale
						main.height = appSize.height  */ 
					}
					this.scaleX =appScale
					this.scaleY =appScale
					// scale the entire interface
					
					// crop some menus which are designed to run off the sides of the screen
					this.scrollRect = appSize;
					trace(appSize);
				}
			}
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				dispatchEvent(new Event(Event.RESIZE))
			}
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="intro"/>
		<s:State name="book"/>
	</s:states>
	<books:BookIntro_desktop width="100%" height="100%" includeIn="intro" SELECT="onJEvent(event)"/>
	<!--<books:Book id="book" includeIn="book" HOME="onJEvent(event)" width="100%" height="100%"  />-->
</s:Group>
