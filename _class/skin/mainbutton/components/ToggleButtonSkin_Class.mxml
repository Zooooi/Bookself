<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:fb="http://ns.adobe.com/flashcatalyst/2009"
		width="53" height="29" >
	
	<fx:Metadata>
		[HostComponent("spark.components.ToggleButton")]
	</fx:Metadata>
	<fx:Script fb:purpose="styling">
		/* Define the skin elements that should not be colorized. 
		For toggle button, the graphics are colorized but the label is not. */
		static private const exclusions:Array = ["labelDisplay"];
		
		/**
		 * @private
		 */    
		//override public function get colorizeExclusions():Array {return exclusions;}
		
		/**
		 * @private
		 */
		override protected function initializationComplete():void
		{
			//useChromeColor = true;
			super.initializationComplete();
		}
		
		/**
		 * @private
		 */
		override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
		{
			var cr:Number = getStyle("cornerRadius");
			
			if (cornerRadius != cr)
			{
				cornerRadius = cr;
				/* shadow.radiusX = cornerRadius;
				fill.radiusX = cornerRadius;
				lowlight.radiusX = cornerRadius;
				highlight.radiusX = cornerRadius;
				border.radiusX = cornerRadius; */
			}
			
			/* if (highlightStroke) highlightStroke.radiusX = cornerRadius;
			if (hldownstroke1) hldownstroke1.radiusX = cornerRadius;
			if (hldownstroke2) hldownstroke2.radiusX = cornerRadius; */
			
			super.updateDisplayList(unscaledWidth, unscaledHeight);
		}
		
		private var cornerRadius:Number = 2;
	</fx:Script>
	<s:states>
		<s:State name="up" />
		<s:State name="over"  />
		<s:State name="down"  />
		<s:State name="disabled"  />
		<s:State name="upAndSelected"  />
		<s:State name="overAndSelected" />
		<s:State name="downAndSelected"  />
		<s:State name="disabledAndSelected"  />
	</s:states>
	
	<!-- background -->
	<!-- shadow (down state only) -->
	
	<!-- label -->
	<s:BitmapImage includeIn="up" x="0" y="0" smooth="true" alpha.up="0.1"
				   source="@Embed('skin/mainbutton/assets/images/class_over.png')"/>
	<s:BitmapImage includeIn="up" x="7" y="2" smooth="true"
				   source="@Embed('skin/mainbutton/assets/images/class_normal.png')"/>
	<s:BitmapImage includeIn="over" x="0" y="0" smooth="true"
				   source="@Embed('skin/mainbutton/assets/images/class_over.png')"/>
	<s:BitmapImage includeIn="down" x="0" y="0" smooth="true"
				   source="@Embed('skin/mainbutton/assets/images/class_over.png')"/>
	<s:BitmapImage includeIn="disabled" x="0" y="0" smooth="true"
				   source="@Embed('skin/mainbutton/assets/images/class_over.png')"/>
	<s:BitmapImage includeIn="upAndSelected" x="0" y="0" smooth="true"
				   source="@Embed('skin/mainbutton/assets/images/class_over.png')"/>
	<s:BitmapImage includeIn="overAndSelected" x="0" y="0" smooth="true"
				   source="@Embed('skin/mainbutton/assets/images/class_over.png')"/>
	<s:BitmapImage includeIn="downAndSelected" x="0" y="0" smooth="true"
				   source="@Embed('skin/mainbutton/assets/images/class_over.png')"/>
	<s:BitmapImage includeIn="disabledAndSelected" x="0" y="0" smooth="true"
				   source="@Embed('skin/mainbutton/assets/images/class_over.png')"/>
	<!-- layer 8: text -->
	<!--- @copy spark.components.supportClasses.ButtonBase#labelDisplay -->
	<s:Label id="labelDisplay" left="24" right="4" top="3" bottom="1" horizontalCenter="10"
			 maxDisplayedLines="1" textAlign="center" verticalAlign="middle" verticalCenter="1">
	</s:Label>
</s:Skin>
